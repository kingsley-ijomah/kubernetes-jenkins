---
apiVersion: v1
kind: Service
metadata:
  name: app
  annotations:
  labels:
    io.kompose.service: app
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: app
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  annotations:
  labels:
    io.kompose.service: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: app
    spec:
      containers:
      - args:
        - bundle
        - exec
        - puma
        - -C
        - config/puma.rb
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              key: DATABASE_HOST
              name: app-env-prod
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              key: DATABASE_NAME
              name: app-env-prod
        - name: DATABASE_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DATABASE_PASSWORD
              name: app-env-prod
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DATABASE_USERNAME
              name: app-env-prod
        - name: RAILS_ENV
          value: production
        - name: SECRET_KEY_BASE
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY_BASE
              name: app-env-prod
        - name: TEST_DATABASE
          valueFrom:
            configMapKeyRef:
              key: TEST_DATABASE
              name: app-env-prod
        image: kingsleyijomah/kubernetes:app
        name: app
        ports:
        - containerPort: 3000
        resources: {}
        stdin: true
        tty: true
      restartPolicy: Always
status: {}
